/*
 * MIT License
 *
 * Copyright (c) 2020-present Cloudogu GmbH and Contributors
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

import com.cloudogu.scm.GitHubUploadTask

plugins {
  id 'org.scm-manager.packaging'
  id 'org.scm-manager.license' version '0.7.1'
}

configurations {
  packageYaml {
    canBeResolved = true
  }
}

dependencies {
  packageYaml project(path: ':scm-packaging:unix', configuration: 'packageYaml')
  packageYaml project(path: ':scm-packaging:windows', configuration: 'packageYaml')
  packageYaml project(path: ':scm-packaging:deb', configuration: 'packageYaml')
  packageYaml project(path: ':scm-packaging:rpm', configuration: 'packageYaml')
  packageYaml project(path: ':scm-packaging:docker', configuration: 'packageYaml')
  packageYaml project(path: ':scm-packaging:helm', configuration: 'packageYaml')
}

task distribution(type: ReleaseYaml) {
  configuration = configurations.packageYaml
}

task publish(type: GitHubUploadTask) {
  owner = "scm-manager"
  repo = "website"
  path = "content/releases/${project.version.replace('.', '-')}.yml"
  branch = "master"
  message = "Add release descriptor for ${project.version}"
  author {
    name = "CES Marvin"
    email = "cesmarvin@cloudogu.com"
  }
  artifact = file('build/libs/release.yml')
  if (project.hasProperty("gitHubApiToken")) {
    apiToken = project.property("gitHubApiToken")
  }
  skip = isSnapshot
  dependsOn 'distribution'
}

license {
  header rootProject.file("LICENSE.txt")
  tasks {
    gradle {
      files.from('build.gradle')
    }
  }
}


task check {
  dependsOn checkLicenses
}

