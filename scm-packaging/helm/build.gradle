/*
 * MIT License
 *
 * Copyright (c) 2020-present Cloudogu GmbH and Contributors
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */

plugins {
  id 'org.unbroken-dome.helm' version '1.5.0'
  id 'org.unbroken-dome.helm-publish' version '1.5.0'
  id 'org.scm-manager.packaging'
  id 'org.scm-manager.license'
}

configurations {
  packageYaml {
    canBeConsumed = true
  }
}

helm {
  downloadClient {
    enabled = true
    version = '3.4.2'
  }
  charts {
    scmServer {
      chartName = "scm-manager"
      chartVersion = dockerTag
      version = dockerTag

      sourceDir = file('src/main/chart')
      filtering {
        enabled = true
        values = [
          dockerRepository: dockerRepository,
          dockerTag: dockerTag
        ]
      }
    }
  }
  publishing {
    repositories {
      nexus {
        url = uri('https://packages.scm-manager.org')
        if (isSnapshot) {
          repository = 'helm-v2-snapshots'
        } else {
          repository = 'helm-v2-releases'
        }
        if (project.hasProperty("packagesScmManagerUsername") && project.hasProperty("packagesScmManagerPassword")) {
          credentials {
            username = project.property("packagesScmManagerUsername")
            password = project.property("packagesScmManagerPassword")
          }
        }
      }
    }
  }
}

helmPackageScmServerChart {
  appVersion = expandedVersion
}

task distribution(type: PackageYaml)  {
  type = 'k8s'
  dependsOn helmPackageScmServerChart
}

artifacts {
  packageYaml(file('build/libs/package.yml')) {
    builtBy distribution
  }
}

task publish {
  dependsOn 'helmPublishScmServerChart'
}

license {
  header rootProject.file("LICENSE.txt")
  lineEnding = "\n"

  exclude '**/Chart.yaml'
  exclude '**/*.txt'

  tasks {
    build {
      files.from("build.gradle")
    }
    main {
      files.from("src")
    }
  }
}

task check {
  dependsOn checkLicenses
}
