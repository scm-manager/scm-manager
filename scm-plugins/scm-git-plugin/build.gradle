/*
 * MIT License
 *
 * Copyright (c) 2020-present Cloudogu GmbH and Contributors
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */


plugins {
  id 'org.scm-manager.smp' version '0.9.4'
}

def jgitVersion = '5.11.1.202105131744-r-scm1'

dependencies {
  // required by scm-it
  api "sonia.jgit:org.eclipse.jgit:${jgitVersion}"
  implementation "sonia.jgit:org.eclipse.jgit.http.server:${jgitVersion}"
  implementation "sonia.jgit:org.eclipse.jgit.lfs.server:${jgitVersion}"
  implementation "sonia.jgit:org.eclipse.jgit.gpg.bc:${jgitVersion}"
  implementation libraries.commonsCompress

  testImplementation "sonia.jgit:org.eclipse.jgit.junit.http:${jgitVersion}"
  testImplementation libraries.shiroUnit
  testImplementation libraries.awaitility
}

scmPlugin {
  scmVersion = project.version
  core = true
  name = "scm-git-plugin"
  displayName = 'Git'
  description = 'Plugin for the version control system Git'
  author = 'Cloudogu GmbH'
  category = 'Source Code Management'
  avatarUrl = '/images/git-logo.png'

  openapi {
    packages = [
      'sonia.scm.api.v2.resources'
    ]
  }

}

task testJar(type: Jar) {
 	classifier = 'tests'
	from sourceSets.test.output
}

configurations {
  tests {
    canBeConsumed = true
    canBeResolved = false
  }
}

artifacts {
  tests(testJar)
}
