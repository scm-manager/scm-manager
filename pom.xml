<?xml version="1.0" encoding="UTF-8"?>
<!--

    MIT License

    Copyright (c) 2020-present Cloudogu GmbH and Contributors

    Permission is hereby granted, free of charge, to any person obtaining a copy
    of this software and associated documentation files (the "Software"), to deal
    in the Software without restriction, including without limitation the rights
    to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
    copies of the Software, and to permit persons to whom the Software is
    furnished to do so, subject to the following conditions:

    The above copyright notice and this permission notice shall be included in all
    copies or substantial portions of the Software.

    THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
    IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
    FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
    AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
    LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
    OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
    SOFTWARE.

-->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">

  <modelVersion>4.0.0</modelVersion>

  <groupId>sonia.scm</groupId>
  <artifactId>scm</artifactId>
  <packaging>pom</packaging>
  <version>2.12.0-SNAPSHOT</version>
  <description>
    The easiest way to share your Git, Mercurial
    and Subversion repositories.
  </description>
  <name>scm</name>

  <url>https://github.com/scm-manager/scm-manager</url>

  <organization>
    <name>Cloudogu GmbH</name>
    <url>https://cloudogu.com</url>
  </organization>

  <licenses>
    <license>
      <name>MIT License</name>
      <url>http://www.opensource.org/licenses/mit-license.php</url>
    </license>
  </licenses>

  <developers>
    <developer>
      <id>sebastian.sdorra</id>
      <name>Sebastian Sdorra</name>
      <email>sebastian.sdorra@cloudogu.com</email>
      <timezone>Europe/Berlin</timezone>
    </developer>
    <developer>
      <id>rene.pfeuffer</id>
      <name>Rene Pfeufer</name>
      <email>rene.pfeuffer@cloudogu.com</email>
      <timezone>Europe/Berlin</timezone>
    </developer>
    <developer>
      <id>eduard.heimbuch</id>
      <name>Eduard Heimbuch</name>
      <email>eduard.heimbuch@cloudogu.com</email>
      <timezone>Europe/Berlin</timezone>
    </developer>
    <developer>
      <id>florian.scholdei</id>
      <name>Florian Scholdei</name>
      <email>florian.scholdei@cloudogu.com</email>
      <timezone>Europe/Berlin</timezone>
    </developer>
    <developer>
      <id>Konstantin Schaper</id>
      <name>Konstantin Schaper</name>
      <email>konstantin.schaper@cloudogu.com</email>
      <timezone>Europe/Berlin</timezone>
    </developer>
  </developers>

  <scm>
    <connection>scm:git:https://github.com/scm-manager/scm-manager</connection>
    <developerConnection>scm:git:ssh://github.com/scm-manager/scm-manager</developerConnection>
    <url>https://github.com/scm-manager/scm-manager</url>
    <tag>HEAD</tag>
  </scm>

  <issueManagement>
    <system>github</system>
    <url>https://github.com/scm-manager/scm-manager/issues</url>
  </issueManagement>

  <mailingLists>
    <mailingList>
      <name>SCM-Manager</name>
      <subscribe>scmmanager-subscribe@googlegroups.com</subscribe>
      <unsubscribe>scmmanager-unsubscribe@googlegroups.com</unsubscribe>
      <post>scmmanager@googlegroups.com</post>
      <archive>http://groups.google.com/group/scmmanager</archive>
    </mailingList>
  </mailingLists>

  <ciManagement>
    <system>Jenkins</system>
    <url>https://oss.cloudogu.com/jenkins/</url>
  </ciManagement>

  <prerequisites>
    <maven>3.1.0</maven>
  </prerequisites>

  <modules>
    <module>scm-annotations</module>
    <module>scm-annotation-processor</module>
    <module>scm-core</module>
    <module>scm-test</module>
    <module>scm-ui</module>
    <module>scm-plugins</module>
    <module>scm-dao-xml</module>
    <module>scm-webapp</module>
    <module>scm-server</module>
    <module>scm-packaging</module>
    <module>scm-it</module>
  </modules>

  <repositories>

    <repository>
      <id>packages.scm-manager.org</id>
      <name>scm-manager public repository</name>
      <url>https://packages.scm-manager.org/repository/public/</url>
    </repository>

  </repositories>

  <pluginRepositories>

    <pluginRepository>
      <id>packages.scm-manager.org</id>
      <name>scm-manager public repository</name>
      <url>https://packages.scm-manager.org/repository/public/</url>
      <snapshots>
        <enabled>true</enabled>
      </snapshots>
      <releases>
        <updatePolicy>never</updatePolicy>
      </releases>
    </pluginRepository>

  </pluginRepositories>

  <dependencies>

    <!-- JUnit 5 -->

    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-api</artifactId>
    </dependency>

    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-params</artifactId>
    </dependency>

    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter-engine</artifactId>
    </dependency>

    <dependency>
      <groupId>org.junit.vintage</groupId>
      <artifactId>junit-vintage-engine</artifactId>
    </dependency>

    <dependency>
      <groupId>org.hamcrest</groupId>
      <artifactId>hamcrest-core</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.hamcrest</groupId>
      <artifactId>hamcrest-library</artifactId>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-core</artifactId>
    </dependency>

    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-junit-jupiter</artifactId>
    </dependency>

    <dependency>
      <groupId>org.assertj</groupId>
      <artifactId>assertj-core</artifactId>
    </dependency>

  </dependencies>

  <dependencyManagement>
    <dependencies>

      <dependency>
        <groupId>com.github.sdorra</groupId>
        <artifactId>shiro-unit</artifactId>
        <version>1.0.1</version>
        <scope>test</scope>
      </dependency>

      <dependency>
        <groupId>com.github.sdorra</groupId>
        <artifactId>ssp-lib</artifactId>
        <version>${ssp.version}</version>
      </dependency>

      <dependency>
        <groupId>com.github.sdorra</groupId>
        <artifactId>ssp-processor</artifactId>
        <version>${ssp.version}</version>
        <optional>true</optional>
      </dependency>

      <dependency>
        <groupId>org.mapstruct</groupId>
        <artifactId>mapstruct-jdk8</artifactId>
        <version>${org.mapstruct.version}</version>
      </dependency>

      <dependency>
        <groupId>org.mapstruct</groupId>
        <artifactId>mapstruct-processor</artifactId>
        <version>${org.mapstruct.version}</version>
      </dependency>

      <dependency>
        <groupId>de.otto.edison</groupId>
        <artifactId>edison-hal</artifactId>
        <version>2.1.0</version>
      </dependency>

      <dependency>
        <groupId>org.projectlombok</groupId>
        <artifactId>lombok</artifactId>
        <version>1.18.10</version>
      </dependency>

      <!-- servlet api -->

      <dependency>
        <groupId>javax.servlet</groupId>
        <artifactId>javax.servlet-api</artifactId>
        <version>${servlet.version}</version>
      </dependency>

      <!-- rest api -->

      <dependency>
        <groupId>org.jboss.resteasy</groupId>
        <artifactId>resteasy-core</artifactId>
        <version>${resteasy.version}</version>
        <exclusions>
          <exclusion>
            <groupId>org.jboss.spec.javax.ws.rs</groupId>
            <artifactId>jboss-jaxrs-api_2.1_spec</artifactId>
          </exclusion>
          <exclusion>
            <groupId>org.jboss.spec.javax.xml.bind</groupId>
            <artifactId>jboss-jaxb-api_2.3_spec</artifactId>
          </exclusion>
        </exclusions>
      </dependency>

      <dependency>
        <groupId>org.jboss.resteasy</groupId>
        <artifactId>resteasy-core-spi</artifactId>
        <version>${resteasy.version}</version>
      </dependency>

      <dependency>
        <groupId>org.jboss.resteasy</groupId>
        <artifactId>resteasy-jaxb-provider</artifactId>
        <version>${resteasy.version}</version>
        <exclusions>
          <exclusion>
            <groupId>org.jboss.spec.javax.xml.bind</groupId>
            <artifactId>jboss-jaxb-api_2.3_spec</artifactId>
          </exclusion>
        </exclusions>
      </dependency>

      <dependency>
        <groupId>org.jboss.resteasy</groupId>
        <artifactId>resteasy-jackson2-provider</artifactId>
        <version>${resteasy.version}</version>
      </dependency>

      <dependency>
        <groupId>org.jboss.resteasy</groupId>
        <artifactId>resteasy-multipart-provider</artifactId>
        <version>${resteasy.version}</version>
      </dependency>

      <dependency>
        <groupId>org.jboss.resteasy</groupId>
        <artifactId>resteasy-client-api</artifactId>
        <version>${resteasy.version}</version>
        <exclusions>
          <exclusion>
            <groupId>org.jboss.spec.javax.ws.rs</groupId>
            <artifactId>jboss-jaxrs-api_2.1_spec</artifactId>
          </exclusion>
        </exclusions>
      </dependency>

      <dependency>
        <groupId>org.jboss.resteasy</groupId>
        <artifactId>resteasy-client</artifactId>
        <version>${resteasy.version}</version>
        <exclusions>
          <exclusion>
            <groupId>org.jboss.spec.javax.ws.rs</groupId>
            <artifactId>jboss-jaxrs-api_2.1_spec</artifactId>
          </exclusion>
        </exclusions>
      </dependency>

      <dependency>
        <groupId>org.jboss.resteasy</groupId>
        <artifactId>resteasy-guice</artifactId>
        <version>${resteasy.version}</version>
      </dependency>

      <dependency>
        <groupId>org.jboss.resteasy</groupId>
        <artifactId>resteasy-servlet-initializer</artifactId>
        <version>${resteasy.version}</version>
        <exclusions>
          <exclusion>
            <groupId>org.jboss.spec.javax.ws.rs</groupId>
            <artifactId>jboss-jaxrs-api_2.1_spec</artifactId>
          </exclusion>
        </exclusions>
      </dependency>

      <!--
        Ensure smallrye-config is at least 1.6.2,
        smallrye-config is a transitive dependency of resteasy-core.
        https://snyk.io/vuln/SNYK-JAVA-IOSMALLRYECONFIG-548898
      -->
      <dependency>
        <groupId>io.smallrye.config</groupId>
        <artifactId>smallrye-config</artifactId>
        <version>1.6.2</version>
      </dependency>

      <dependency>
        <groupId>javax.ws.rs</groupId>
        <artifactId>javax.ws.rs-api</artifactId>
        <version>${jaxrs.version}</version>
      </dependency>

      <dependency>
        <groupId>io.swagger.core.v3</groupId>
        <artifactId>swagger-annotations</artifactId>
        <version>2.1.1</version>
      </dependency>

      <dependency>
        <groupId>com.fasterxml.jackson.core</groupId>
        <artifactId>jackson-core</artifactId>
        <version>${jackson.version}</version>
      </dependency>

      <dependency>
        <groupId>com.fasterxml.jackson.core</groupId>
        <artifactId>jackson-databind</artifactId>
        <version>${jackson.version}</version>
      </dependency>

      <dependency>
        <groupId>com.fasterxml.jackson.core</groupId>
        <artifactId>jackson-annotations</artifactId>
        <version>${jackson.version}</version>
      </dependency>

      <dependency>
        <groupId>org.hibernate.validator</groupId>
        <artifactId>hibernate-validator</artifactId>
	      <version>${hibernate-validator.version}</version>
      </dependency>

      <!-- JUnit 5 -->

      <dependency>
        <groupId>org.junit.jupiter</groupId>
        <artifactId>junit-jupiter-api</artifactId>
        <version>${junit.version}</version>
        <scope>test</scope>
      </dependency>

      <dependency>
        <groupId>org.junit.jupiter</groupId>
        <artifactId>junit-jupiter-params</artifactId>
        <version>${junit.version}</version>
        <scope>test</scope>
      </dependency>

      <dependency>
        <groupId>org.junit.jupiter</groupId>
        <artifactId>junit-jupiter-engine</artifactId>
        <version>${junit.version}</version>
        <scope>test</scope>
      </dependency>

      <dependency>
        <groupId>org.junit.vintage</groupId>
        <artifactId>junit-vintage-engine</artifactId>
        <version>${junit.version}</version>
        <scope>test</scope>
      </dependency>

      <dependency>
        <groupId>junit</groupId>
        <artifactId>junit</artifactId>
        <version>4.13.1</version>
        <scope>test</scope>
      </dependency>

      <dependency>
        <groupId>org.hamcrest</groupId>
        <artifactId>hamcrest-core</artifactId>
        <version>${hamcrest.version}</version>
        <scope>test</scope>
      </dependency>

      <dependency>
        <groupId>org.hamcrest</groupId>
        <artifactId>hamcrest-library</artifactId>
        <version>${hamcrest.version}</version>
        <scope>test</scope>
      </dependency>

      <dependency>
        <groupId>org.mockito</groupId>
        <artifactId>mockito-core</artifactId>
        <version>${mockito.version}</version>
        <scope>test</scope>
      </dependency>

      <dependency>
        <groupId>org.mockito</groupId>
        <artifactId>mockito-junit-jupiter</artifactId>
        <version>${mockito.version}</version>
        <scope>test</scope>
      </dependency>

      <dependency>
        <groupId>org.assertj</groupId>
        <artifactId>assertj-core</artifactId>
        <version>3.18.1</version>
        <scope>test</scope>
      </dependency>

      <dependency>
        <groupId>org.awaitility</groupId>
        <artifactId>awaitility</artifactId>
        <version>4.0.2</version>
        <scope>test</scope>
      </dependency>

      <!-- http -->

      <dependency>
        <groupId>org.apache.httpcomponents</groupId>
        <artifactId>httpclient</artifactId>
        <version>4.5.5</version>
        <exclusions>
          <exclusion>
            <groupId>commons-logging</groupId>
            <artifactId>commons-logging</artifactId>
          </exclusion>
        </exclusions>
      </dependency>

      <!-- logging -->

      <dependency>
        <artifactId>slf4j-api</artifactId>
        <groupId>org.slf4j</groupId>
        <version>${slf4j.version}</version>
      </dependency>

      <dependency>
        <groupId>ch.qos.logback</groupId>
        <artifactId>logback-classic</artifactId>
        <version>${logback.version}</version>
      </dependency>

      <!-- xml -->

      <dependency>
        <groupId>jakarta.xml.bind</groupId>
        <artifactId>jakarta.xml.bind-api</artifactId>
        <version>${jaxb.version}</version>
      </dependency>

      <dependency>
        <groupId>org.glassfish.jaxb</groupId>
        <artifactId>jaxb-runtime</artifactId>
        <version>${jaxb.version}</version>
      </dependency>

      <!-- utils -->

      <dependency>
        <groupId>commons-codec</groupId>
        <artifactId>commons-codec</artifactId>
        <version>1.15</version>
      </dependency>

      <!-- gpg -->

      <dependency>
        <groupId>org.bouncycastle</groupId>
        <artifactId>bcpg-jdk15on</artifactId>
        <version>${bouncycastle.version}</version>
      </dependency>

      <dependency>
        <groupId>org.bouncycastle</groupId>
        <artifactId>bcprov-jdk15on</artifactId>
        <version>${bouncycastle.version}</version>
      </dependency>

      <dependency>
        <groupId>org.bouncycastle</groupId>
        <artifactId>bcpkix-jdk15on</artifactId>
        <version>${bouncycastle.version}</version>
      </dependency>

    </dependencies>
  </dependencyManagement>

  <build>

    <pluginManagement>
      <plugins>

        <plugin>
          <groupId>com.github.sdorra</groupId>
          <artifactId>buildfrontend-maven-plugin</artifactId>
          <version>2.5.0</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-javadoc-plugin</artifactId>
          <version>3.1.1</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-resources-plugin</artifactId>
          <version>2.6</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-assembly-plugin</artifactId>
          <version>2.3</version>
        </plugin>

        <plugin>
          <groupId>sonia.scm.maven</groupId>
          <artifactId>smp-maven-plugin</artifactId>
          <version>1.4.0</version>
        </plugin>

        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-deploy-plugin</artifactId>
          <version>2.8.2</version>
        </plugin>

        <plugin>
          <groupId>io.openapitools.swagger</groupId>
          <artifactId>swagger-maven-plugin</artifactId>
          <version>2.1.2</version>
        </plugin>

      </plugins>
    </pluginManagement>

    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>2.22.0</version>
        <configuration>
          <!--
          skips surefire tests without skipping failsafe tests.
          Property value seems to magically default to false
          -->
          <skipTests>${skipUnitTests}</skipTests>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-enforcer-plugin</artifactId>
        <version>3.0.0-M3</version>
        <executions>
          <execution>
            <id>enforce-java</id>
            <phase>compile</phase>
            <goals>
              <goal>enforce</goal>
            </goals>
            <configuration>
              <rules>
                <!--
                enforce minimum 1.8.0-101 to accept Let’s Encrypt certificates
                -->
                <requireJavaVersion>
                  <version>[1.8.0-101,)</version>
                </requireJavaVersion>
                <!--
                enforce minimum maven 3.1 for the smp plugin
                -->
                <requireMavenVersion>
                  <version>[3.1,)</version>
                </requireMavenVersion>
                <!--
                enforce java 1.8 compatible bytecode
                -->
                <enforceBytecodeVersion>
                  <maxJdkVersion>1.8</maxJdkVersion>
                  <ignoreClasses>
                    <!--
                    ignore java 9 module info classes
                    because jaxb is compiled with java 7 expect of module-info, which is compiled with java 9
                    -->
                    <ignoreClass>module-info</ignoreClass>
                  </ignoreClasses>
                </enforceBytecodeVersion>
              </rules>
              <fail>true</fail>
            </configuration>
          </execution>
        </executions>
        <dependencies>
          <dependency>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>extra-enforcer-rules</artifactId>
            <version>1.3</version>
          </dependency>
        </dependencies>
      </plugin>

      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>animal-sniffer-maven-plugin</artifactId>
        <!--
        Note: 1.17 seems to have problems with JDK8. When updating, use > 1.17, if available!
        https://github.com/mojohaus/animal-sniffer/issues/53
        -->
        <version>1.16</version>
        <configuration>
          <signature>
            <groupId>org.codehaus.mojo.signature</groupId>
            <artifactId>java18</artifactId>
            <version>1.0</version>
          </signature>
        </configuration>
        <executions>
          <execution>
            <phase>compile</phase>
            <goals>
              <goal>check</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>com.github.legman</groupId>
        <artifactId>legman-maven-plugin</artifactId>
        <version>${legman.version}</version>
        <configuration>
          <fail>true</fail>
        </configuration>
        <executions>
          <execution>
            <phase>process-classes</phase>
            <goals>
              <!--
              Prevent usage of guava annotations that would be silently ignored -> hard to find.
              We use legman annotations instead, that provide additional features such as weak references.
              -->
              <goal>guava-migration-check</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.5.1</version>
        <configuration>
          <showWarnings>true</showWarnings>
          <showDeprecation>true</showDeprecation>
          <source>${project.build.javaLevel}</source>
          <target>${project.build.javaLevel}</target>
          <testSource>${project.test.javaLevel}</testSource>
          <testTarget>${project.test.javaLevel}</testTarget>
          <encoding>${project.build.sourceEncoding}</encoding>
          <!--
          suppress compiler warning about bootclasspath with older source
          see https://blogs.oracle.com/darcy/entry/bootclasspath_older_source
          -->
          <compilerArgument>-Xlint:unchecked,-options</compilerArgument>
          <compilerArgument>-parameters</compilerArgument>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-resources-plugin</artifactId>
        <configuration>
          <encoding>${project.build.sourceEncoding}</encoding>
        </configuration>
      </plugin>

      <plugin>
        <groupId>com.mycila</groupId>
        <artifactId>license-maven-plugin</artifactId>
        <version>3.0</version>
        <configuration>
          <header>https://download.scm-manager.org/licenses/license.txt</header>
          <excludes>
            <exclude>.editorconfig</exclude>
            <exclude>.git/**</exclude>
            <exclude>.*/**</exclude>
            <exclude>.mvn/wrapper/**</exclude>
            <exclude>docs/**</exclude>
            <exclude>node_modules/**</exclude>
            <exclude>target/**</exclude>
            <exclude>tmp/**</exclude>
            <exclude>**/.m2/**</exclude>
            <exclude>**/.cache/**</exclude>
            <exclude>**/node_modules/**</exclude>
            <exclude>**/target/**</exclude>
            <exclude>**/tmp/**</exclude>
            <exclude>**/*.mustache</exclude>
            <exclude>**/*.txt</exclude>
            <exclude>*.ini</exclude>
            <exclude>*.mustache</exclude>
            <exclude>*.smp</exclude>
            <exclude>*.tpl</exclude>
            <exclude>*.txt</exclude>
            <exclude>mvnw</exclude>
            <exclude>mvnw.cmd</exclude>
            <exclude>yarn.lock</exclude>
            <exclude>**/logback.ci.xml</exclude>
            <exclude>**/pkg/ourPackage/scm-source.properties</exclude>
            <exclude>**/.vagrant/**</exclude>
          </excludes>
          <mapping>
            <tsx>SLASHSTAR_STYLE</tsx>
            <ts>SLASHSTAR_STYLE</ts>
            <java>SLASHSTAR_STYLE</java>
          </mapping>
          <strictCheck>true</strictCheck>
        </configuration>
        <executions>
          <execution>
            <phase>process-resources</phase>
            <goals>
              <goal>check</goal>
            </goals>
          </execution>
        </executions>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-javadoc-plugin</artifactId>
        <configuration>
          <useStandardDocletOptions>true</useStandardDocletOptions>
          <charset>${project.build.sourceEncoding}</charset>
          <encoding>${project.build.sourceEncoding}</encoding>
          <docencoding>${project.build.sourceEncoding}</docencoding>
          <breakiterator>true</breakiterator>
          <source>${project.build.javaLevel}</source>
          <version>true</version>
          <author>true</author>
          <keywords>true</keywords>
          <links>
            <link>http://download.oracle.com/javase/8/docs/api/</link>
            <link>http://download.oracle.com/docs/cd/E17802_01/products/products/servlet/2.5/docs/servlet-2_5-mr2/</link>
            <link>https://google.github.io/guice/api-docs/${guice.version}/javadoc</link>
            <link>http://www.slf4j.org/api/</link>
            <link>http://shiro.apache.org/static/current/apidocs/</link>
          </links>
        </configuration>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-source-plugin</artifactId>
        <version>2.2.1</version>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-clean-plugin</artifactId>
        <version>2.5</version>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-install-plugin</artifactId>
        <version>2.4</version>
      </plugin>

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-deploy-plugin</artifactId>
      </plugin>

      <!--
         fix maven troubleshooting part on
         https://github.com/scm-manager/scm-manager/blob/develop/docs/configure-eclipse.md
      -->

      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-eclipse-plugin</artifactId>
        <version>2.6</version>
      </plugin>

    </plugins>
  </build>

  <profiles>
    <profile>
      <id>coverage</id>

      <build>
        <plugins>

          <!-- code coverage -->

          <plugin>
            <groupId>org.jacoco</groupId>
            <artifactId>jacoco-maven-plugin</artifactId>
            <version>0.8.5</version>
            <executions>
              <execution>
                <goals>
                  <goal>prepare-agent</goal>
                </goals>
              </execution>
              <execution>
                <id>report</id>
                <phase>test</phase>
                <goals>
                  <goal>report</goal>
                </goals>
              </execution>
            </executions>
          </plugin>

        </plugins>
      </build>

    </profile>
  </profiles>

  <distributionManagement>

    <repository>
      <id>packages.scm-manager.org</id>
      <name>scm-manager release repository</name>
      <url>https://packages.scm-manager.org/repository/releases/</url>
    </repository>

    <snapshotRepository>
      <id>packages.scm-manager.org</id>
      <name>scm-manager snapshot repository</name>
      <url>https://packages.scm-manager.org/repository/snapshots/</url>
    </snapshotRepository>

  </distributionManagement>

  <properties>
    <!-- test libraries -->
    <mockito.version>3.6.0</mockito.version>
    <hamcrest.version>2.1</hamcrest.version>
    <junit.version>5.7.0</junit.version>

    <!-- logging libraries -->
    <slf4j.version>1.7.30</slf4j.version>
    <logback.version>1.2.3</logback.version>
    <servlet.version>3.1.0</servlet.version>

    <jaxrs.version>2.1.1</jaxrs.version>
    <resteasy.version>4.5.8.Final</resteasy.version>
    <jersey-client.version>1.19.4</jersey-client.version>
    <jackson.version>2.11.3</jackson.version>
    <guice.version>4.2.3</guice.version>
    <jaxb.version>2.3.3</jaxb.version>
    <hibernate-validator.version>6.1.6.Final</hibernate-validator.version>
    <bouncycastle.version>1.67</bouncycastle.version>

    <!-- event bus -->
    <legman.version>1.6.2</legman.version>

    <!-- webserver -->
    <jetty.version>9.4.35.v20201120</jetty.version>
    <jetty.maven.version>9.4.34.v20201102</jetty.maven.version>

    <!-- security libraries -->
    <ssp.version>1.2.0</ssp.version>
    <shiro.version>1.7.0</shiro.version>

    <!-- repository libraries -->
    <jgit.version>5.6.1.202002131546-r-scm1</jgit.version>
    <svnkit.version>1.10.1-scm2</svnkit.version>

    <!-- util libraries -->
    <guava.version>30.0-jre</guava.version>

    <!-- frontend -->
    <nodejs.version>12.16.1</nodejs.version>
    <yarn.version>1.22.0</yarn.version>

    <!-- build properties -->
    <project.build.javaLevel>8</project.build.javaLevel>
    <project.test.javaLevel>8</project.test.javaLevel>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <netbeans.hint.license>SCM-MIT</netbeans.hint.license>
    <jdk.classifier/>
    <org.mapstruct.version>1.3.1.Final</org.mapstruct.version>

    <!-- Sonar exclusions -->
    <!-- *StoreFactory classes are excluded because extracting the floating store parameter classes in a generic -->
    <!-- common class creates runtime errors (IncompatibleClassChange) -->
    <!-- *UserPassword JS files are excluded because extraction of common code would not make the code more readable -->
    <sonar.cpd.exclusions>**/*StoreFactory.java,**/*UserPassword.js</sonar.cpd.exclusions>

    <sonar.nodejs.executable>./scm-ui/target/frontend/buildfrontend-node/node-v${nodejs.version}-linux-x64/bin/node</sonar.nodejs.executable>

    <!-- Possibility to skip only the unit test. Can be useful when running only integration tests.
    This can be used from the command line as follows: mvn <goals> -DskipUnitTests -->
    <skipUnitTests>${skipTests}</skipUnitTests>
  </properties>

</project>
