#
# MIT License
#
# Copyright (c) 2020-present Cloudogu GmbH and Contributors
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.
#

errorCommandFailed= ____________Command failed____________
errorUnknownError= Unknown error occurred. Check your server logs
errorLabel= ERROR
errorExecutionFailed = Error
transactionId = Transaction ID

creationDate = Creation Date
lastModified = Last Modified
yes = yes
no = no

repoNamespace = Namespace
repoName = Name
repoDescription= Description
repoContact= Contact
repoType= Type
repoUrl = Url
repoCreationDate = Creation Date
repoLastModified = Last Modified

# picocli translations
usage.parameterListHeading = Parameters:%n
usage.optionListHeading = Options:%n
usage.commandListHeading = Commands:%n
usage.descriptionHeading = Description:\u0020
usage.synopsisHeading = Usage:\u0020

## Template renderer
scm.templateRenderer.template = Specify rendering template

## Help
scm.help.usage.description.0 = Show this help message and exit.

## Logout
scm.logout.usage.description.0 = Removes the api key from server and local cli config

## Ping
scm.ping.usage.description.0 = Returns PONG if the server is available

## Repo
scm.repo.usage.description.0 = Resource command for all repository-related actions
repoNotFound= Could not find repository
repoInvalidInput= Invalid input. Use namespace/name

### Get repo
scm.repo.get.usage.description.0 = Returns repository-related information
scm.repo.get.repository = Repository namespace/name

### List repo
scm.repo.list.usage.description.0 = List all repositories on server

### Create repo
scm.repo.create.usage.description.0 = Creates new repository on server
scm.repo.create.type = Repository type
scm.repo.create.repository = Repository name (namespace/name for custom namespace strategy)
scm.repo.create.contact = Repository contact mail address
scm.repo.create.desc = Repository description
scm.repo.create.init = Initialize repository

### Delete repo
scm.repo.delete.usage.description.0 = Deletes repository on server
scm.repo.delete.repository = Repository namespace/name
scm.repo.delete.prompt = Set this flag to agree to delete the repository
repoDeletePrompt= If you really want to delete this repository please pass --yes

### Modify repo
scm.repo.modify.usage.description.0 = Modify repository on server
scm.repo.modify.repository = Repository namespace/name

## User
scm.user.username = Username
scm.user.displayName = Display Name
scm.user.email = Email address
scm.user.external = External
scm.user.password = Password
scm.user.active = Active

### User error
scmUserErrorPassword = Valid password is required for internal users
scmUserErrorExternalActivate = External users cannot be activated
scmUserErrorExternalDeactivate = External users cannot be deactivated
scmUserErrorNotFound = Could not find user

### User command
scm.user.usage.description.0 = Resource command for all user-related actions

### Get user
scm.user.get.usage.description.0 = Returns user-related information

### List user
scm.user.list.usage.description.0 = List all users on server

### Create user
scm.user.create.usage.description.0 = Creates new user on server
scm.user.create.deactivate = User is deactivated
scm.user.create.external = User is managed by an external system

### Delete user
scm.user.delete.usage.description.0 = Deletes user on server
scm.user.delete.prompt = Set this flag to agree to delete the user
scmUserDeleteConfirm = If you really want to delete this user please pass --yes
scmUserDeleteSuccess = Successfully deleted user

### Modify user
scm.user.modify.usage.description.0 = Modify user on server

### Activate user
scm.user.activate.usage.description.0 = Activate user on server

### Deactivate user
scm.user.deactivate.usage.description.0 = Deactivate user on server

### Convert to external user
scm.user.convert-to-external.usage.description.0 = Convert user to external user on server

### Convert to internal user
scm.user.convert-to-internal.usage.description.0 = Convert user to internal user on server

### Group
scm.group.name = Name
scm.group.description = Description
scm.group.members = Members
scm.group.membersList = Members
scm.group.external = External

### Group command
scm.group.usage.description.0 = Resource command for all group-related actions

### Get group
scm.group.get.usage.description.0 = Returns group-related information
scm.group.get.name = Name of the group

### List group
scm.group.list.usage.description.0 = List all groups on server
scm.group.list.short = List only names of groups

### Create group
scm.group.create.usage.description.0 = Creates new group on server
scm.group.create.name = Name of the group
scm.group.create.description = Description of the new group
scm.group.create.member = Members of the new group
scm.group.create.external = Group is managed by an external system

### Delete group
scm.group.delete.usage.description.0 = Delete group on server
scm.group.delete.group = Name of the group
scm.group.delete.prompt = Set this flag to agree to delete the group
groupDeletePrompt = If you really want to delete this group please pass --yes

### Modify group
scm.group.modify.usage.description.0 = Modify group on server
scm.group.modify.name = Name of the group
scm.group.modify.desc = New description of the group
scm.group.modify.member = New members of the group
scm.group.modify.external = Whether the group is an external group or not

### Add members to group
scm.group.add-member.usage.description.0 = Add members to an existing group
scm.group.add-member.name = Name of the group
scm.group.add-member.members = Members to add to the group

### Remove members form group
scm.group.remove-member.usage.description.0 = Remove members from an existing group
scm.group.remove-member.name = Name of the group
scm.group.remove-member.members = Members to remove from the group

groupNotFound = Could not find group

## Plugin
scm.plugin.usage.description.0 = Resource command for all plugin-management-related actions
scmPluginNotAvailable = This plugin is not available. Please check your input.
scmPluginNotInstalled = This plugin is not installed. Please check your input.
scmPluginAlreadyInstalled = This plugin is already installed.
scmPluginAdded = The plugin was added for installation.
scmPluginRemoved = The plugin was removed.
scmPluginUpdated = The plugin was updated.
scmPluginsUpdated = All available plugins were updated.
scmPluginNotRemoved = This plugin could not be removed. Other installed plugins could depend on this plugin.
scmPluginNotAdded = This plugin could not be added. Please check your server logs for further information.
scmPluginNotUpdatable = This plugin could not be updated.
scmPluginsUpdateFailed = Plugin updated failed. Please check your server logs for further information.
scmServerRestartRequired = Please restart your server to make the plugin changes effective.
scmServerRestartTriggered = Server restart: Applying the changes...
scmServerRestartSkipped = Server restart skipped: Nothing to apply.
scmServerRestartConfirmation = Please confirm the server restart using --yes.
scmPluginsNotPending = No pending plugin changes found.
scmPendingPluginsCancelled = All plugin changes were cancelled.

### List plugins
scm.plugin.name = Name
scm.plugin.displayName = Display Name
scm.plugin.installedVersion = Installed
scm.plugin.availableVersion = Available
scm.plugin.pending = Pending?
scm.plugin.list.usage.description.0 = List all plugins with versions
scm.plugin.list.short = Show only the plugin names

### Add plugin
scm.plugin.add.usage.description.0 = Installs the plugin with the required dependencies
scm.plugin.add.apply = Apply all plugin changes now by restarting the server

### Remove plugin
scm.plugin.remove.usage.description.0 = Deletes the plugin
scm.plugin.remove.apply = Apply all plugin changes now by restarting the server

### Update plugin
scm.plugin.update.usage.description.0 = Updates the installed plugin
scm.plugin.update.apply = Apply all plugin changes now by restarting the server

### Update all plugins
scm.plugin.update-all.usage.description.0 = Updates all installed plugins
scm.plugin.update-all.apply = Apply all plugins changes now by restarting the server

### Apply plugin changes
scm.plugin.apply.usage.description.0 = Applies the pending plugin changes by restarting the server
scm.plugin.restart = Confirms server restart

### Apply plugin changes
scm.plugin.cancel-pending.usage.description.0 = Cancel all pending plugin changes


